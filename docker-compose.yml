services:
  db:
    image: postgres:15
    env_file: .env
    environment:
      POSTGRES_DB: "${DB_NAME}"
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
    networks:
      - app_network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1G
        reservations:
          cpus: "0.5"
          memory: 512M

  web:
    image: chernet1/todo-app:latest
    command: >
      sh -c "
      /wait-for-it.sh db:5432 --timeout=60 --strict -- 
      python manage.py collectstatic --noinput &&
      python manage.py migrate --noinput &&
      python manage.py createsuperuser --noinput || true &&
      gunicorn todo_project.wsgi:application --bind 0.0.0.0:8000 
      --timeout 600
      --workers 3
      --threads 2"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app_network
    ports:
      - "${APP_PORT}:${CONTAINER_PORT}"

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/staticfiles
    env_file:
      - .env
    environment:
      - NGINX_PORT=${NGINX_PORT}
      - NGINX_CONTAINER_PORT=${NGINX_CONTAINER_PORT}
    ports:
      - "${NGINX_PORT}:${NGINX_CONTAINER_PORT}"
    depends_on:
      - web
    networks:
      - app_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M

volumes:
  postgres_data:
  static_volume: # Added new volume for static files

networks:
  app_network:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450
