name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m venv venv
          . venv/bin/activate
          pip install flake8

      - name: Run Flake8 Linter
        run: |
          . venv/bin/activate
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

  build:
    runs-on: ubuntu-latest
    needs: lint
    services:
      db:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        healthcheck:
          test: ["CMD-SHELL", "pg_isready -U ${{ secrets.POSTGRES_USER }}"]
          interval: 10s
          timeout: 5s
          retries: 5
      redis:
        image: redis:latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and tag Docker images
        run: |
          docker build -t chernet1/todo_app-web:latest -f Dockerfile .
          docker build -t chernet1/todo_app-nginx:latest -f nginx/Dockerfile .

      - name: Push Docker images to Docker Hub
        run: |
          docker push chernet1/todo_app-web:latest
          docker push chernet1/todo_app-nginx:latest

  test:
    runs-on: ubuntu-latest
    needs: build
    services:
      db:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        healthcheck:
          test: ["CMD-SHELL", "pg_isready -U ${{ secrets.POSTGRES_USER }}"]
          interval: 10s
          timeout: 5s
          retries: 5
      redis:
        image: redis:latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run migrations
        run: |
          docker-compose -f docker-compose.yml run web python ./todo_project/manage.py makemigrations --no-input

      - name: Run tests
        run: |
          docker-compose -f docker-compose.yml run web python manage.py test