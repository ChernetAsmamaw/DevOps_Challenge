name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"

      - name: Install flake8 for linting
        run: pip install flake8

      - name: Run flake8 linter
        run: flake8 . --exit-zero

  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Debug Docker Build Context
        run: ls -la todo_project/  # Check if the correct directory exists

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build \
            --build-arg SECRET_KEY=${{ secrets.SECRET_KEY }} \
            -f todo_project/Dockerfile \
            -t ${{ secrets.DOCKER_USERNAME }}/todo_project:latest \
            todo_project/

      - name: Push Docker Image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/todo_project:latest

  test:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:17
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        ports:
          - 5435:5432
        options: >-
          --health-cmd "pg_isready -U $POSTGRES_USER"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r todo_project/requirements.txt  # Make sure this path is correct

      - name: Wait for Database to be Ready
        run: |
          for i in {1..10}; do
            pg_isready -h localhost -p 5435 -U $POSTGRES_USER && break || sleep 5;
          done

      - name: Run Django tests
        env:
          DATABASE_URL: postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@localhost:5435/$POSTGRES_DB
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          DB_HOST: localhost
          DB_PORT: 5435
          EMAIL_HOST: localhost
          EMAIL_PORT: 1025
        run: |
          python ./todo_project/manage.py makemigrations --no-input
          python ./todo_project/manage.py migrate --no-input
          python ./todo_project/manage.py test
